[common]
default_region = eu-west-2

[athena]
account = 555666777888
database_prefix = some_prefix
flow_logs_bucket = the-flow-logs-bucket
query_results_bucket = query-results-bucket
query_results_polling_delay_seconds = 0
query_timeout_seconds = 1200
query_throttling_seconds = 0
role = athena_role

[cost_explorer]
role = cost_explorer_role

[cloudtrail]
account = 111344576685
event_key_id = 74356589
log_group_name = the-cloudtrail-log-group
logs_bucket = cloudtrail-logs-bucket
logs_retention_days = 90
region = eu
role = cloudtrail_role

[ec2]
role = ec2_role
flow_log_status = ACTIVE
flow_log_traffic_type = ALL
flow_log_format = ${srcaddr} ${dstaddr}

[iam]
role = iam_role
audit_role = iam_audit_role
password_policy_minimum_password_length = 8
password_policy_require_symbols = true
password_policy_require_numbers = true
password_policy_require_uppercase_chars = false
password_policy_require_lowercase_chars = false
password_policy_allow_users_to_change_password = false
password_policy_max_password_age = 90
password_policy_password_reuse_prevention = 12
password_policy_hard_expiry = false

[kms]
role = kms_role

[logs]

vpc_dns_log_group_name = /vpc/central_dns_log_name 
vpc_dns_log_group_pattern = [version, account_id]
vpc_dns_log_group_destination_name = some-dns-central
vpc_dns_log_group_delivery_role = vpc_flow_log_role
vpc_dns_log_group_retention_policy_days = 14
vpc_dns_log_group_target_account = 555666777888

vpc_log_group_name = /vpc/flow_log
vpc_log_group_pattern = [version, account_id, interface_id]
vpc_log_group_destination_name = central
vpc_log_group_target_account = 555666777888
vpc_log_group_delivery_role = vpc_flow_log_role
vpc_log_group_delivery_role_assume_policy = {"Statement": [{"Action": "sts:AssumeRole"}]}
vpc_log_group_delivery_role_policy = delivery_role_policy
vpc_log_group_delivery_role_policy_document = {"Statement": [{"Effect": "Allow", "Action": ["logs:*"], "Resource": "*"}]}
vpc_log_group_retention_policy_days = 14

role = logs_role
route53_log_group_name = /aws/route53/query_log
; leaving route53_log_group_pattern blank purposefully, we want the filter to be empty and therefore pass everything
route53_log_group_pattern =
route53_log_group_destination_name = central
route53_log_group_target_account = 555666777888
route53_log_group_delivery_role = route53_flow_log_role
route53_log_group_delivery_role_assume_policy = {"Statement": [{"Action": "sts:AssumeRole"}]}
route53_log_group_delivery_role_policy = delivery_role_policy
route53_log_group_delivery_role_policy_document = {"Statement": [{"Effect": "Allow", "Action": ["logs:*"], "Resource": "*"}]}
route53_log_group_retention_policy_days = 14
log_group_resource_policy_name = query_logs_to_cloudwatch_logs

[organization]
account = 999888777666
role = orgs_role
include_root_accounts = true
parent = Parent OU

[reports]
format = json
output = stdout
account = 333222333222
role = s3_reports_role
bucket = scanner-reports-bucket

[s3]
role = s3_role

[session]
duration_seconds = 3600

[ssm]
role = ssm_role

[tasks]
executors = 10

[user]
account = 111222333444
name = joe.bloggs

[vpc_peering]
role = pcx_role

[route53]
role = route53_role

[route53resolver]
role = route53resolver_role
dns_query_log_config_name = test_resolver_config_name
